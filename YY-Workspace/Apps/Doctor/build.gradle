apply plugin: 'com.android.application'
apply plugin: 'me.tatarka.retrolambda'

android {
    compileSdkVersion rootProject.ext.compileSdkVersion
    buildToolsVersion rootProject.ext.buildToolsVersion

    defaultConfig {
        applicationId "com.zhuanyeban.yaya"
        minSdkVersion rootProject.ext.minSdkVersion
        targetSdkVersion rootProject.ext.targetSdkVersion
        versionCode 6601
        versionName "6.6.01"

        proguardFiles getDefaultProguardFile('proguard-android.txt'),
                // LibYS里的混淆, 相对路径为3级
                '../../../Lib-Workspace/LibYS_Rx/proguard-ys.pro',
                '../../../Lib-Workspace/LibYS_Rx/proguard-fresco.pro',
                '../../../Lib-Workspace/LibYS_Rx/proguard-permission.pro',
                '../../../Lib-Workspace/LibYS_Rx/proguard-lambda.pro',
                '../../../Lib-Workspace/LibBD/proguard-baidu.pro',
                // YaYa-Libs 里的混淆, 相对路径为2级
                '../../Libs/LibJG/proguard-jg.pro',
                // 本身的混淆
                'proguard-rules.pro'

//        manifestPlaceholders = [
//                JSHARE_PKGNAME : applicationId,
//                JPUSH_APPKEY : "88391aa0f118d8646d1fb6e3", //极光控制台创建应用得到的AppKey.
//                JPUSH_CHANNEL : "developer-default", //暂时填写默认值即可.
//        ]

    }

    signingConfigs {
        release {
            keyAlias 'jx'
            keyPassword '123456'
            storeFile file('./jx.keystore')
            storePassword '123456'
        }
    }

    buildTypes {
        debug {
            buildConfigField "boolean", "DEBUG_LOG", "true"
            buildConfigField "boolean", "DEBUG_NETWORK", "true"
            buildConfigField "boolean", "SWIPE_BACK_ENABLE", "true"
            buildConfigField "boolean", "TEST", "true"

            signingConfig signingConfigs.release

            shrinkResources false
            zipAlignEnabled false
            minifyEnabled false
        }
        alpha {
            buildConfigField "boolean", "DEBUG_LOG", "true"
            buildConfigField "boolean", "DEBUG_NETWORK", "true"
            buildConfigField "boolean", "SWIPE_BACK_ENABLE", "false"
            buildConfigField "boolean", "TEST", "false"

            signingConfig signingConfigs.release

            shrinkResources false
            zipAlignEnabled false
            minifyEnabled false
        }
        release {
            buildConfigField "boolean", "DEBUG_LOG", "false"
            buildConfigField "boolean", "DEBUG_NETWORK", "false"
            buildConfigField "boolean", "SWIPE_BACK_ENABLE", "false"
            buildConfigField "boolean", "TEST", "false"

            signingConfig signingConfigs.release

            shrinkResources true
            zipAlignEnabled true
            minifyEnabled true
        }
    }

    productFlavors {
        flavors_debug {
            manifestPlaceholders = [
                    app_name: "YaYa医师(B)",
            ]
        }
        flavors_alpha {
            manifestPlaceholders = [
                    app_name: "YaYa医师(A)",
            ]
        }
        flavors_release {
            manifestPlaceholders = [
                    app_name: "YaYa医师",
            ]
        }
    }

    //在生成的apk文件，修改下命名
    applicationVariants.all { variant ->
        variant.outputs.each { output ->
            def outputFile = output.outputFile
            if (outputFile != null && outputFile.name.endsWith('.apk')) {
                // 前段
                def fileName = outputFile.name.replace("Doctor", "YaYa医师")
                // 中段
                fileName = fileName.replace("-flavors_debug", "")
                fileName = fileName.replace("-debug", "(test)")
                fileName = fileName.replace("-flavors_alpha", "")
                fileName = fileName.replace("-alpha", "(alpha)")
                fileName = fileName.replace("-flavors_release", "")
                fileName = fileName.replace("-release", "")
                // 尾端
                fileName = fileName.replace(".apk", "_v${defaultConfig.versionName}.apk")

                output.outputFile = new File(outputFile.parent, fileName)
            }
        }
    }

    sourceSets {
        main.res.srcDirs += 'src/main/res-form'
    }

    lintOptions {
        abortOnError rootProject.ext.abortOnError
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

}

dependencies {
    compile fileTree(include: ['*.jar'], dir: 'libs')
    compile project(':YY-Workspace:Libs:LibYY')
    compile project(':YY-Workspace:Libs:LibPay')
    compile project(':YY-Workspace:Libs:LibPlayer')
    compile project(':YY-Workspace:Libs:LibJG')
}

